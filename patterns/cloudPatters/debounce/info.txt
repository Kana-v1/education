Позволяет контролировать как часто функцию будут дергать (особенно в контексте апи вызовов)
На самом деле даже не ограничивает, а позволяет дернуть только 1 раз в рамках кластера вызовов.
Т.е. если кто-то 1 3 раза за секунду дернет этот хенддер - он вызовется 1 раз. 
А если 3 человека дернут этот хендлер за 1 сек - вызовется 3 раза.

Состоит из:
 - Circuit => The function to regulate
 - Debounce => A closure with the same function signature as Circuit.

 Существуют 2 варианта этого паттерна:
  - function-first -> при каждом вызове функции ставится таймер, пока он не истечет - хендлер 
  не вызывается. Позволяет закешировать ответа
  - function-last - сначала таймер, потом функция, короче по факту просто кол с задержкой


