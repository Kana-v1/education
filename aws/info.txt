EC2(Elastic Compute Cloud) - the core of the web of Amazon Web Services. 
s3 - amazon objects store service
rds - relational database service

CloudWatch - тригерится если сервис падает, перегружен, etc. 
Он реагирует на метрики (использование CPU у EC2 серверов). 
Можно настроить на другие действия, помимо простого алярма.

SNS(Simple Notification Service) - напарник CloudWatch, которые пушит алерты на эндоинты. Имеет топик, на который подписывается смс, или мыло на которое нужно отправить нотификацию. Топики привязаны к региону и отправляют нотифаи только внутри своего региона. 


IAM (Identity and Access Managment service) - simple user and access managment. Это про секьюрность аккаунта 

================== 
VPC (Virtual Private Cloud) - позволяет создать виртауальный нетворк, в котором можно лаунчить ресурсы, и логически изолировать их от других VPC и внешнего мира (ec2 может лежать внутри впс)

Security Group - определяет пул айпишников, которые могут коннектиться к vpc, и к которым может коннектится vpc (файлвол на минималках), могут быть расшарены для нескольких VPC  

Routing Table - VPC использует таблицы роутинга(Routing Table) для конфигурации куда пойдет траффик от vpc. У каждого впс есть 1 таблица роутинга. 

Network Access Control List - проверяет какой айпишник пропустить, а  какой - нет, по сути грубый аналог Security Group

Хоть ресурсы внутри впс не могут взаимодействовать с внешним миром, внутри впс можно создавать сабнетворки (у каждого будет своя Routing Table и Network Access Control List), которые уже могут взаимодействовать друг с другом. Так, например, можно сделать публичный сабнетворк, который будет идти во внешний мир, и приватный который будет идти через публичный. 
 
 cidr block - the range of available IP addresses
 
 NAT Gateway - позволяет сущностям внутри впс взаимодействовать с внешним миром. Это можно сделать и без него если включить автонастройку ИП для новых сущностей внутри впс(network -> actions -> edit subnet settings -> enable auto assign public ipv4 address), но так секьюрнее (и дороже... намного дороже)
 
 ====================
Elastic Compute Cloud(ec2) - просто виртуалка, у которой есть память, цпу, нетворк. На нее можно установить любую ос.  
Amazon Machine Image (AMI) - операционная система и софт, который установлен в ес2. 
Elastic Block Store(EBS) - independent storage volumes used with ec2 instances. По сути память для ес2, которая еще и независимая(можно ее кидать с одного ес2 на другой)
 
Elastic ip - публичные ИП адреса, который создаются, уничтожаются и присваиваются автоматически. Позволяет достучаться до ес2 из внешнего мира без настройки "автоматическое назначение ип адресов" (elastic ip addresses -> actions -> associate elastic ip address)
 
Подключение с ес2 через ssh: ssh -i <per-file> ec2-user@<ec2-ip>; где ec2-user - default username to connect to the ec2 instance

======================
Auto Scaling Group -  увеличивает или уменьшает количетсов инстансов, основываясь на заранее определенных правилах. Чтобы его настроить дополнительно нужен балансировщик.

Создание AMI: ec2 -> instances -> actions -> images and templates -> create image

Creating a Load Balancer: ec2 -> load balancer -> create load balancer -> select(or create) secutiry group -> select(or create) target group 

Creating auto scaling group: ec2 -> auto scaling group -> create -> launch template -> (ami, instance type => advanced details -> insert script if need to start app immediatly after scaling) -> vpn -> subnets(all public) -> attach to load balancer -> target group -> 
 
 
 
 
 
 
 
